<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lwz9103 的砖厂</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lwz9103.github.io/"/>
  <updated>2021-03-21T13:53:57.992Z</updated>
  <id>https://lwz9103.github.io/</id>
  
  <author>
    <name>lwz9103</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mlsql-task-3</title>
    <link href="https://lwz9103.github.io/2021/03/21/mlsql-task-3/"/>
    <id>https://lwz9103.github.io/2021/03/21/mlsql-task-3/</id>
    <published>2021-03-21T12:52:30.000Z</published>
    <updated>2021-03-21T13:53:57.992Z</updated>
    
    <content type="html"><![CDATA[<h3 id="设置-MLSQL-环境依赖"><a href="#设置-MLSQL-环境依赖" class="headerlink" title="设置 MLSQL  环境依赖"></a>设置 MLSQL  环境依赖</h3><ol><li><p>检查本机 Python 版本</p><p><img src="//lwz9103.github.io/2021/03/21/mlsql-task-3/image-20210321211426235.png" alt="image-20210321211426235"></p></li><li><p>安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip install Cython</span><br><span class="line">pip install pyarrow==0.10.0</span><br><span class="line">pip install ray==0.8.0</span><br><span class="line">pip install aiohttp psutil setproctitle grpcio pandas xlsxwriter</span><br><span class="line">pip install watchdog requests click uuid sfcli  pyjava</span><br></pre></td></tr></table></figure></li><li><p>本机启动 ray</p><p><img src="//lwz9103.github.io/2021/03/21/mlsql-task-3/image-20210321211638975.png" alt="image-20210321211638975"></p><p><img src="//lwz9103.github.io/2021/03/21/mlsql-task-3/image-20210321215259601.png" alt="image-20210321215259601"></p></li><li><p>验证代码执行</p><p><img src="//lwz9103.github.io/2021/03/21/mlsql-task-3/image-20210321215321048.png" alt="image-20210321215321048"></p><p><img src="//lwz9103.github.io/2021/03/21/mlsql-task-3/image-20210321215329927.png" alt="image-20210321215329927"></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;设置-MLSQL-环境依赖&quot;&gt;&lt;a href=&quot;#设置-MLSQL-环境依赖&quot; class=&quot;headerlink&quot; title=&quot;设置 MLSQL  环境依赖&quot;&gt;&lt;/a&gt;设置 MLSQL  环境依赖&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;检查本机 Python 版本&lt;
      
    
    </summary>
    
    
      <category term="MLSQL Learning" scheme="https://lwz9103.github.io/tags/MLSQL-Learning/"/>
    
  </entry>
  
  <entry>
    <title>开篇语</title>
    <link href="https://lwz9103.github.io/2019/08/21/first-post/"/>
    <id>https://lwz9103.github.io/2019/08/21/first-post/</id>
    <published>2019-08-20T17:34:10.000Z</published>
    <updated>2019-10-29T18:18:16.238Z</updated>
    
    <content type="html"><![CDATA[<h3 id="为什么开博客？"><a href="#为什么开博客？" class="headerlink" title="为什么开博客？"></a>为什么开博客？</h3><h4 id="知识管理"><a href="#知识管理" class="headerlink" title="知识管理"></a>知识管理</h4><p>何为知识管理，个人认为是对过去经历过的或未来可能面临到的各类问题的应对策略的总结，以便在碰到类似问题时高效的找到解决方案。那么，高效的<strong>存储和读取</strong>知识记录就应该是知识管理工具的必备特点。</p><p>之前有用有道云，onenote 做知识记录的习惯，但随着记录经验的增加，发现自己对知识记录有了更进一步的需求。之前只是需要<strong>知识的存储检索和同步</strong>，现在还需要<strong>简洁的记录方式</strong>，<strong>优雅的外观</strong>，同时不失<strong>强大的功能</strong>。</p><p>由于经常使用 github，所以在页面编辑方式上首选 <strong>markdown</strong>，外观显示上采用 <strong>github pages + hexo + next</strong>，编辑工具使用 <strong>typora</strong>。由于 hexo 和 next 有众多开发者贡献插件，各类功能也能得到很好的保障。</p><a id="more"></a><h4 id="大脑瘦身"><a href="#大脑瘦身" class="headerlink" title="大脑瘦身"></a>大脑瘦身</h4><p>之前经常看一些技术文章，看的过程中觉得理解了。碰到问题的时候，经常会有种感觉，仿佛哪里见过，但就是说不清楚是哪了，怎么解决的。去各类知识平台搜索自己的浏览记录，却发现已经找不到任何痕迹了。这类知识，早被大脑<strong>垃圾回收了</strong>，也没有持久化，这就基本相当于浪费了阅读这段知识所花的时间。要想让这些知识能重回到大脑里，就得有引用指向这些知识。这个引用的产生可以是从外部知识存储中加载到大脑中，但这<strong>存在一定的时限</strong>，所以有可能需要<strong>定时的加载</strong>。另外，日常生活&amp;工作正常进行所需的知识会自然而然的保存到大脑的 context 中，这块知识由于经常被引用，所以能避免被大脑当成垃圾回收掉。</p><p>由于大脑存储容量及性能有限，装载的太满容易卡机（垃圾回收频繁，大脑得释放一些内存）。所以对于一些占用空间大，使用频率低的知识可以做外部知识链接，比如各类不常用系统的搭建流程（jenkins，sonar etc.）。外部知识链接即知识存储在外部系统（笔记本），但是脑子里存了一份知识关键字到外部存储位置的链接关系。这里知识的关键字存在不同的详细程度，比如 jenkins 相关的知识、jenkins 搭建相关的流程、jenkins 搭建中构建节点的配置，其详细程度是依次递增的。对一个知识认识的详细程度越高，搜索起来效率也越高（搜索关键字准确），trade off 是需要更多的时间和空间来加载这些知识链接。</p><h4 id="系统思考"><a href="#系统思考" class="headerlink" title="系统思考"></a>系统思考</h4><p>写作是系统化思考知识最有效的方式。平时，可能看到或者听来的知识，可能很少来得及深入思考，这就导致较复杂的一些知识没法有效的转换成自己的经验。但是，在写作总结知识的过程中，脑子里会抛出一系列疑问和假设，对这些疑问和假设一一思考过后，就会更加深刻的理解知识其中的含义，写出来的东西也更能让未来的你或者别人看懂。</p><h3 id="写博客需要注意的点"><a href="#写博客需要注意的点" class="headerlink" title="写博客需要注意的点"></a>写博客需要注意的点</h3><h4 id="由浅入深，适可而止"><a href="#由浅入深，适可而止" class="headerlink" title="由浅入深，适可而止"></a>由浅入深，适可而止</h4><p>知识的整理存档并不是一件轻松的事情，所以需要衡量效用和耗时。我把对知识的理解归为三个层次。第一层次，能够正确使用知识暴露的最外层接口。第二层次，理解知识内在的工作逻辑，在出现异常状况时，能够快速找到 Root Cause。第三层级，深刻理解知识运用的场景，明白其潜在的缺陷，并且能有自己的见解去改善它。</p><p>大部分时候，我们只需要掌握第一层次，就能基本应付工作和生活了。所以在去深入了解一门知识前，都先考虑考虑是否值得花这些时间。</p><h4 id="从源头收集资料"><a href="#从源头收集资料" class="headerlink" title="从源头收集资料"></a>从源头收集资料</h4><p>从源头收集资料，这样可以避免多次转手带来的偏差。参考的优先级为：</p><p> <code>官网/国际期刊论文书籍 --&gt; 卓有成就的专家博客 --&gt; 较专业的知识分享网站 --&gt; google 搜索 --&gt; bing --&gt; 某度</code></p><h4 id="经过验证"><a href="#经过验证" class="headerlink" title="经过验证"></a>经过验证</h4><p>知识存档前需要验证其准确性。有些知识可能会因为来源问题，时间问题（版本）导致不可被验证。这类需要被剔除，因为它已经没用了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;为什么开博客？&quot;&gt;&lt;a href=&quot;#为什么开博客？&quot; class=&quot;headerlink&quot; title=&quot;为什么开博客？&quot;&gt;&lt;/a&gt;为什么开博客？&lt;/h3&gt;&lt;h4 id=&quot;知识管理&quot;&gt;&lt;a href=&quot;#知识管理&quot; class=&quot;headerlink&quot; title=&quot;知识管理&quot;&gt;&lt;/a&gt;知识管理&lt;/h4&gt;&lt;p&gt;何为知识管理，个人认为是对过去经历过的或未来可能面临到的各类问题的应对策略的总结，以便在碰到类似问题时高效的找到解决方案。那么，高效的&lt;strong&gt;存储和读取&lt;/strong&gt;知识记录就应该是知识管理工具的必备特点。&lt;/p&gt;
&lt;p&gt;之前有用有道云，onenote 做知识记录的习惯，但随着记录经验的增加，发现自己对知识记录有了更进一步的需求。之前只是需要&lt;strong&gt;知识的存储检索和同步&lt;/strong&gt;，现在还需要&lt;strong&gt;简洁的记录方式&lt;/strong&gt;，&lt;strong&gt;优雅的外观&lt;/strong&gt;，同时不失&lt;strong&gt;强大的功能&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;由于经常使用 github，所以在页面编辑方式上首选 &lt;strong&gt;markdown&lt;/strong&gt;，外观显示上采用 &lt;strong&gt;github pages + hexo + next&lt;/strong&gt;，编辑工具使用 &lt;strong&gt;typora&lt;/strong&gt;。由于 hexo 和 next 有众多开发者贡献插件，各类功能也能得到很好的保障。&lt;/p&gt;
    
    </summary>
    
      <category term="杂谈" scheme="https://lwz9103.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="扯淡" scheme="https://lwz9103.github.io/tags/%E6%89%AF%E6%B7%A1/"/>
    
  </entry>
  
</feed>
