<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[mlsql-task-3]]></title>
    <url>%2F2021%2F03%2F21%2Fmlsql-task-3%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[开篇语]]></title>
    <url>%2F2019%2F08%2F21%2Ffirst-post%2F</url>
    <content type="text"><![CDATA[为什么开博客？知识管理何为知识管理，个人认为是对过去经历过的或未来可能面临到的各类问题的应对策略的总结，以便在碰到类似问题时高效的找到解决方案。那么，高效的存储和读取知识记录就应该是知识管理工具的必备特点。 之前有用有道云，onenote 做知识记录的习惯，但随着记录经验的增加，发现自己对知识记录有了更进一步的需求。之前只是需要知识的存储检索和同步，现在还需要简洁的记录方式，优雅的外观，同时不失强大的功能。 由于经常使用 github，所以在页面编辑方式上首选 markdown，外观显示上采用 github pages + hexo + next，编辑工具使用 typora。由于 hexo 和 next 有众多开发者贡献插件，各类功能也能得到很好的保障。 大脑瘦身之前经常看一些技术文章，看的过程中觉得理解了。碰到问题的时候，经常会有种感觉，仿佛哪里见过，但就是说不清楚是哪了，怎么解决的。去各类知识平台搜索自己的浏览记录，却发现已经找不到任何痕迹了。这类知识，早被大脑垃圾回收了，也没有持久化，这就基本相当于浪费了阅读这段知识所花的时间。要想让这些知识能重回到大脑里，就得有引用指向这些知识。这个引用的产生可以是从外部知识存储中加载到大脑中，但这存在一定的时限，所以有可能需要定时的加载。另外，日常生活&amp;工作正常进行所需的知识会自然而然的保存到大脑的 context 中，这块知识由于经常被引用，所以能避免被大脑当成垃圾回收掉。 由于大脑存储容量及性能有限，装载的太满容易卡机（垃圾回收频繁，大脑得释放一些内存）。所以对于一些占用空间大，使用频率低的知识可以做外部知识链接，比如各类不常用系统的搭建流程（jenkins，sonar etc.）。外部知识链接即知识存储在外部系统（笔记本），但是脑子里存了一份知识关键字到外部存储位置的链接关系。这里知识的关键字存在不同的详细程度，比如 jenkins 相关的知识、jenkins 搭建相关的流程、jenkins 搭建中构建节点的配置，其详细程度是依次递增的。对一个知识认识的详细程度越高，搜索起来效率也越高（搜索关键字准确），trade off 是需要更多的时间和空间来加载这些知识链接。 系统思考写作是系统化思考知识最有效的方式。平时，可能看到或者听来的知识，可能很少来得及深入思考，这就导致较复杂的一些知识没法有效的转换成自己的经验。但是，在写作总结知识的过程中，脑子里会抛出一系列疑问和假设，对这些疑问和假设一一思考过后，就会更加深刻的理解知识其中的含义，写出来的东西也更能让未来的你或者别人看懂。 写博客需要注意的点由浅入深，适可而止知识的整理存档并不是一件轻松的事情，所以需要衡量效用和耗时。我把对知识的理解归为三个层次。第一层次，能够正确使用知识暴露的最外层接口。第二层次，理解知识内在的工作逻辑，在出现异常状况时，能够快速找到 Root Cause。第三层级，深刻理解知识运用的场景，明白其潜在的缺陷，并且能有自己的见解去改善它。 大部分时候，我们只需要掌握第一层次，就能基本应付工作和生活了。所以在去深入了解一门知识前，都先考虑考虑是否值得花这些时间。 从源头收集资料从源头收集资料，这样可以避免多次转手带来的偏差。参考的优先级为： 官网/国际期刊论文书籍 --&gt; 卓有成就的专家博客 --&gt; 较专业的知识分享网站 --&gt; google 搜索 --&gt; bing --&gt; 某度 经过验证知识存档前需要验证其准确性。有些知识可能会因为来源问题，时间问题（版本）导致不可被验证。这类需要被剔除，因为它已经没用了。]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>扯淡</tag>
      </tags>
  </entry>
</search>
